{"version":3,"sources":["types.jsx","components/CartItem/CartItem.jsx","components/Cart/Cart.jsx","components/Product/Product.jsx","components/Products/Products.jsx","App.jsx","index.js"],"names":["productType","PropTypes","shape","price","string","isRequired","name","id","cartItemsType","item","arrayOf","total","number","count","deleteFromCart","func","addToCart","CartItem","cartItems","clearCart","products","key","className","type","onClick","Cart","length","map","reduce","acc","cur","Product","product","Products","productsFromServer","App","state","cartVisible","alreadyInCart","forEach","cartItem","push","setState","index","splice","getCartVisible","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5d11fad8.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nexport const productType = PropTypes.shape({\n  price: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n}).isRequired;\n\nexport const cartItemsType = PropTypes.shape({\n  item: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    total: PropTypes.number.isRequired,\n    count: PropTypes.number.isRequired,\n  })).isRequired,\n  deleteFromCart: PropTypes.func.isRequired,\n  addToCart: PropTypes.func.isRequired,\n});\n\nexport const cartType = PropTypes.shape({\n  cartItems: cartItemsType.isRequired,\n  clearCart: PropTypes.func.isRequired,\n  deleteFromCart: PropTypes.func.isRequired,\n  addToCart: PropTypes.func.isRequired,\n}).isRequired;\n\nexport const productsType = PropTypes.shape({\n  addToCart: PropTypes.func.isRequired,\n  products: PropTypes.arrayOf(productType),\n}).isRequired;\n","import React from 'react';\nimport { cartItemsType } from '../../types';\nimport './CartItem.scss';\n\nexport const CartItem = ({ item, deleteFromCart, addToCart }) => (\n  <li key={item.id} className=\"cart-list__cart-item cart-item\">\n    <p className=\"cart-item__cart-product-name\">\n      {`${item.name}: ${item.count} kg -  $ ${+item.total}`}\n    </p>\n    <button\n      type=\"button\"\n      className=\"cart-item__button--add\"\n      onClick={() => addToCart(item)}\n    >\n      +\n    </button>\n    <button\n      type=\"button\"\n      className=\"cart-item__button--delete\"\n      onClick={() => deleteFromCart(item)}\n    >\n      -\n    </button>\n  </li>\n);\n\nCartItem.propTypes = cartItemsType;\n","import React from 'react';\nimport { cartType } from '../../types';\nimport { CartItem } from '../CartItem';\nimport './Cart.scss';\n\nexport const Cart = ({ cartItems, clearCart, deleteFromCart, addToCart }) => (\n  <div className=\"cart-block__cart cart\">\n    <div className=\"cart__header\">\n      {\n        (cartItems.length === 0)\n          ? (<div>Cart is empty</div>)\n          : (\n            <div>{`You have ${cartItems.length} items in the cart`}</div>\n          )\n      }\n    </div>\n\n    <div className=\"cart__body\">\n      <ul className=\"cart__cart-list cart-list\">\n        {cartItems.map(item => (\n          <CartItem\n            item={item}\n            deleteFromCart={deleteFromCart}\n            addToCart={addToCart}\n            key={item.id}\n          />\n        ))}\n      </ul>\n    </div>\n\n    <div className=\"cart__total\">\n      { ` Total: $\n        ${cartItems.reduce((acc, cur) => acc + cur.total, 0)}\n      `}\n    </div>\n\n    <div className=\"cart__menu menu\">\n      {\n        (cartItems.length === 0)\n          ? (<></>)\n          : (\n            <button\n              type=\"button\"\n              onClick={clearCart}\n              className=\"menu__button button\"\n            >\n              Clear Cart\n            </button>\n          )\n      }\n    </div>\n  </div>\n);\n\nCart.propTypes = cartType;\n","import React from 'react';\nimport { productType } from '../../types';\nimport './Product.scss';\n\nexport const Product = ({ product, addToCart }) => (\n  <li key={product.id}>\n    <div className=\"list__product product\">\n      <p className=\"product__name name\">\n        {product.name}\n      </p>\n\n      <p className=\"product__price\">\n        {`$ ${+product.price}`}\n      </p>\n\n      <button\n        type=\"button\"\n        className=\"product__button button\"\n        onClick={() => addToCart(product)}\n      >\n        Add to Cart\n      </button>\n    </div>\n  </li>\n);\n\nProduct.propTypes = productType;\n","import React from 'react';\nimport { productsType } from '../../types';\nimport { Product } from '../Product/Product';\nimport './Products.scss';\n\nexport const Products = ({ addToCart, products }) => (\n  <ul className=\"content__list list\">\n    {products.map(product => (\n      <Product\n        key={product.id}\n        product={product}\n        addToCart={addToCart}\n      />\n    ))}\n  </ul>\n);\n\nProducts.propTypes = productsType;\n","import React from 'react';\nimport { Cart } from './components/Cart';\nimport { Products } from './components/Products';\nimport './styles/general.scss';\nimport './App.scss';\n\nconst productsFromServer = [\n  {\n    name: 'Banana', price: '10', id: '1',\n  },\n  {\n    name: 'Apple', price: '8', id: '2',\n  },\n  {\n    name: 'Papaya', price: '10', id: '3',\n  },\n];\n\nclass App extends React.Component {\n  state = {\n    products: productsFromServer,\n    cartItems: [],\n    cartVisible: true,\n  }\n  /* eslint-disable */\n  addToCart = (product) => {\n    const { cartItems } = this.state;\n    let alreadyInCart = false;\n\n    cartItems.forEach((cartItem) => {\n      if (cartItem.id === product.id) {\n        if (((cartItem.count + 1) % 3) === 0) {\n          cartItem.count += 1;\n          alreadyInCart = true;\n          cartItem.total += +cartItem.price / 2;\n        } else {\n          cartItem.count += 1;\n          alreadyInCart = true;\n          cartItem.total += +cartItem.price;\n        }\n      }\n    });\n\n    if (!alreadyInCart) {\n      cartItems.push({\n        ...product,\n        count: 1,\n        total: +product.price,\n      });\n    }\n\n    this.setState({ cartItems });\n  }\n\n  deleteFromCart = (product) => {\n    const { cartItems } = this.state;\n\n    \n    cartItems.forEach((cartItem, index) => {\n      if (cartItem.id === product.id) {\n        if (((+cartItem.count + 1) % 3) === 0) {\n          cartItem.count -= 1;\n          cartItem.total -= +cartItem.price / 2;\n        } else {\n          cartItem.count -= 1;\n          cartItem.total -= +cartItem.price;\n        }\n      }\n      \n\n      if (cartItem.count === 1) {\n        cartItem.total = +cartItem.price;\n      }\n\n      if (cartItem.count === 0) {\n        cartItems.splice(index, 1);\n      }\n    });\n\n    this.setState({ cartItems });\n  }\n  /* eslint-enable */\n\n  clearCart = () => {\n    this.setState({\n      cartItems: [],\n    });\n  }\n\n  getCartVisible = () => {\n    const { cartVisible } = this.state;\n\n    this.setState({\n      cartVisible: !(cartVisible),\n    });\n  }\n\n  render() {\n    const { products, cartItems } = this.state;\n    const { addToCart, getCartVisible, clearCart } = this;\n\n    return (\n      <div className=\"app\">\n        <h1 className=\"app__title\">Products List</h1>\n        <div className=\"app__content content\">\n          <Products\n            products={products}\n            addToCart={addToCart}\n          />\n\n          <div className=\"app__cart-block cart-block\">\n            <button\n              type=\"button\"\n              onClick={getCartVisible}\n              className=\"cart-block__button\"\n            />\n\n            {(this.state.cartVisible)\n              ? (\n                <Cart\n                  cartItems={cartItems}\n                  clearCart={clearCart}\n                  deleteFromCart={this.deleteFromCart}\n                  addToCart={this.addToCart}\n                />\n              )\n              : <></>}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}