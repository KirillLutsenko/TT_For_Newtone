{"version":3,"sources":["types.jsx","components/CartItem/CartItem.jsx","components/Cart/Cart.jsx","components/Product/Product.jsx","components/Products/Products.jsx","App.jsx","index.js"],"names":["productType","PropTypes","shape","price","string","isRequired","name","id","cartItemsType","arrayOf","total","number","CartItem","cartItems","clearCart","func","addToCart","products","key","className","Cart","length","map","item","reduce","acc","cur","type","onClick","Product","product","Products","productsFromServer","App","state","cartVisible","alreadyInCart","forEach","cartItem","count","push","setState","getCartVisible","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9a199dd6.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nexport const productType = PropTypes.shape({\n  price: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n});\n\nexport const cartItemsType = PropTypes.arrayOf(PropTypes.shape({\n  name: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  total: PropTypes.number.isRequired,\n}));\n\nexport const cartType = PropTypes.shape({\n  cartItems: cartItemsType.isRequired,\n  clearCart: PropTypes.func.isRequired,\n}).isRequired;\n\nexport const productsType = PropTypes.shape({\n  addToCart: PropTypes.func.isRequired,\n  products: PropTypes.arrayOf(productType.isRequired).isRequired,\n}).isRequired;\n","import React from 'react';\nimport { cartItemsType } from '../../types';\nimport './CartItem.scss';\n\nexport const CartItem = ({ id, name, total }) => (\n  <li key={id} className=\"cart-list__cart-item cart-item\">\n    <p className=\"cart-list__cart-product-name\">\n      {`${name}: $ ${+total}`}\n    </p>\n  </li>\n);\n\nCartItem.propTypes = cartItemsType;\n","import React from 'react';\nimport { cartType } from '../../types';\nimport { CartItem } from '../CartItem';\nimport './Cart.scss';\n\nexport const Cart = ({ cartItems, clearCart }) => (\n  <div className=\"cart-block__cart cart\">\n    <div className=\"cart__header\">\n      {\n        (cartItems.length === 0)\n          ? (<div>Cart is empty</div>)\n          : (\n            <div>{`You have ${cartItems.length} items in the cart`}</div>\n          )\n      }\n    </div>\n\n    <div className=\"cart__body\">\n      <ul className=\"cart__cart-list cart-list\">\n        {cartItems.map(item => (\n          <CartItem\n            id={item.id}\n            name={item.name}\n            total={item.total}\n          />\n        ))}\n      </ul>\n    </div>\n\n    <div className=\"cart__total\">\n      { ` Total: $\n        ${cartItems.reduce((acc, cur) => acc + cur.total, 0)}\n      `}\n    </div>\n\n    <div className=\"cart__menu menu\">\n      {\n        (cartItems.length === 0)\n          ? (<></>)\n          : (\n            <button\n              type=\"button\"\n              onClick={clearCart}\n              className=\"menu__button button\"\n            >\n              Clear Cart\n            </button>\n          )\n      }\n    </div>\n  </div>\n);\n\nCart.propTypes = cartType;\n","import React from 'react';\nimport { productType } from '../../types';\nimport './Product.scss';\n\nexport const Product = ({ product, addToCart }) => (\n  <li key={product.id}>\n    <div className=\"list__product product\">\n      <p className=\"product__name name\">\n        {product.name}\n      </p>\n\n      <p className=\"product__price\">\n        {`$ ${+product.price}`}\n      </p>\n\n      <button\n        type=\"button\"\n        className=\"product__button button\"\n        onClick={() => addToCart(product)}\n      >\n        Add to Cart\n      </button>\n    </div>\n  </li>\n);\n\nProduct.propTypes = productType;\n","import React from 'react';\nimport { productsType } from '../../types';\nimport { Product } from '../Product/Product';\nimport './Products.scss';\n\nexport const Products = ({ addToCart, products }) => (\n  <ul className=\"content__list list\">\n    {products.map(product => (\n      <Product\n        product={product}\n        addToCart={addToCart}\n      />\n    ))}\n  </ul>\n);\n\nProducts.propTypes = productsType;\n","import React from 'react';\nimport { Cart } from './components/Cart';\nimport { Products } from './components/Products';\nimport './styles/general.scss';\nimport './App.scss';\n\nconst productsFromServer = [\n  {\n    name: 'Banana', price: '10', id: '1',\n  },\n  {\n    name: 'Apple', price: '8', id: '2',\n  },\n  {\n    name: 'Papaya', price: '10', id: '3',\n  },\n];\n\nclass App extends React.Component {\n  state = {\n    products: productsFromServer,\n    cartItems: [],\n    cartVisible: false,\n  }\n\n  addToCart = (product) => {\n    const { cartItems } = this.state;\n    let alreadyInCart = false;\n    /* eslint-disable */\n    cartItems.forEach((cartItem) => {\n      if (cartItem.id === product.id) {\n        if (((cartItem.count + 1) % 3) === 0) {\n          cartItem.count += 1;\n          alreadyInCart = true;\n          cartItem.total += +cartItem.price / 2;\n        } else {\n          cartItem.count += 1;\n          alreadyInCart = true;\n          cartItem.total += +cartItem.price;\n        }\n      }\n      /* eslint-enable */\n    });\n\n    if (!alreadyInCart) {\n      cartItems.push({\n        ...product,\n        count: 1,\n        total: +product.price,\n      });\n    }\n\n    this.setState({ cartItems });\n  }\n\n  clearCart = () => {\n    this.setState({\n      cartItems: [],\n    });\n  }\n\n  getCartVisible = () => {\n    const { cartVisible } = this.state;\n\n    this.setState({\n      cartVisible: !(cartVisible),\n    });\n  }\n\n  render() {\n    const { products, cartItems } = this.state;\n    const { addToCart, getCartVisible, clearCart } = this;\n\n    return (\n      <div className=\"app\">\n        <h1 className=\"app__title\">Products List</h1>\n        <div className=\"app__content content\">\n          <Products\n            products={products}\n            addToCart={addToCart}\n          />\n\n          <div className=\"app__cart-block cart-block\">\n            <button\n              type=\"button\"\n              onClick={getCartVisible}\n              className=\"cart-block__button\"\n            />\n\n            {(this.state.cartVisible)\n              ? (<Cart cartItems={cartItems} clearCart={clearCart} />)\n              : <></>}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}