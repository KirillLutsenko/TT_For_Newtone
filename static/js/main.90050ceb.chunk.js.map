{"version":3,"sources":["types.jsx","components/Cart/Cart.jsx","components/Products/Products.jsx","App.jsx","index.js"],"names":["cartItemsType","PropTypes","arrayOf","shape","name","string","isRequired","price","id","count","productType","Cart","cartItems","clearCart","func","addToCart","products","className","length","map","item","key","reduce","acc","cur","type","onClick","Products","product","productsFromServer","App","state","cartVisible","alreadyInCart","forEach","cartItem","push","setState","getCartVisible","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.90050ceb.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nconst cartItemsType = PropTypes.arrayOf(PropTypes.shape({\n  name: PropTypes.string.isRequired,\n  price: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  count: PropTypes.string.isRequired,\n}));\n\nconst productType = PropTypes.shape({\n  price: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n});\n\nexport const cartType = PropTypes.shape({\n  cartItems: cartItemsType.isRequired,\n  clearCart: PropTypes.func.isRequired,\n}).isRequired;\n\nexport const productsType = PropTypes.shape({\n  addToCart: PropTypes.func.isRequired,\n  products: PropTypes.arrayOf(productType.isRequired).isRequired,\n}).isRequired;\n","import React from 'react';\nimport { cartType } from '../../types';\nimport './Cart.scss';\n\nconst Cart = ({ cartItems, clearCart }) => (\n  <div className=\"cart-block__cart cart\">\n    <div className=\"cart__header\">\n      {\n        (cartItems.length === 0)\n          ? (<div>Cart is empty</div>)\n          : (\n            <div>{`You have ${cartItems.length} items in the cart`}</div>\n          )\n      }\n    </div>\n\n    <div className=\"cart__body\">\n      <ul className=\"cart__cart-list cart-list\">\n        {cartItems.map(item => (\n          <li className=\"cart-list__cart-item cart-item\" key={item.id}>\n            <p className=\"product__name name\">\n              {`${item.name}: $ ${+item.price * item.count}`}\n            </p>\n          </li>\n        ))}\n      </ul>\n    </div>\n\n    <div className=\"cart__total\">\n      { ` Total: $\n        ${cartItems.reduce((acc, cur) => acc + (cur.price * cur.count), 0)}\n      `}\n    </div>\n\n    <div className=\"cart__menu menu\">\n      {\n        (cartItems.length === 0)\n          ? (<></>)\n          : (\n            <button\n              type=\"button\"\n              onClick={clearCart}\n              className=\"menu__button button\"\n            >\n              Clear Cart\n            </button>\n          )\n      }\n    </div>\n  </div>\n);\n\nCart.propTypes = cartType;\n\nexport default Cart;\n","import React from 'react';\nimport { productsType } from '../../types';\nimport './Product.scss';\n\nconst Products = ({ addToCart, products }) => (\n  <div>\n    <ul className=\"content__list list\">\n      {products.map(product => (\n        <li key={product.id}>\n          <div className=\"list__product product\">\n            <p className=\"product__name name\">\n              {product.name}\n            </p>\n\n            <p className=\"product__price\">\n              {`$ ${+product.price}`}\n            </p>\n\n            <button\n              type=\"button\"\n              className=\"product__button button\"\n              onClick={() => addToCart(product)}\n            >\n              Add to Cart\n            </button>\n          </div>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nProducts.propTypes = productsType;\n\nexport default Products;\n","import React from 'react';\nimport './styles/general.scss';\nimport './App.scss';\nimport Cart from './components/Cart/Cart';\nimport Products from './components/Products/Products';\n\nconst productsFromServer = [\n  {\n    name: 'Banana', price: '10', id: '1',\n  },\n  {\n    name: 'Apple', price: '8', id: '2',\n  },\n  {\n    name: 'Papaya', price: '10', id: '3',\n  },\n];\n\nclass App extends React.Component {\n  state = {\n    products: productsFromServer,\n    cartItems: [],\n    cartVisible: false,\n  }\n\n  addToCart = (product) => {\n    const { cartItems } = this.state;\n    let alreadyInCart = false;\n\n    cartItems.forEach((cartItem) => {\n      if (cartItem.id === product.id) {\n        // eslint-disable-next-line no-param-reassign\n        cartItem.count += 1;\n        alreadyInCart = true;\n      }\n    });\n    if (!alreadyInCart) {\n      cartItems.push({\n        ...product,\n        count: 1,\n      });\n    }\n\n    this.setState({ cartItems });\n  }\n\n  clearCart = () => {\n    this.setState({\n      cartItems: [],\n      cartVisible: false,\n    });\n  }\n\n  getCartVisible = () => {\n    const { cartVisible } = this.state;\n\n    this.setState({\n      cartVisible: !(cartVisible),\n    });\n  }\n\n  render() {\n    const { products, cartItems } = this.state;\n\n    return (\n      <div className=\"app\">\n        <h1 className=\"app__title\">Products List</h1>\n        <div className=\"app__content content\">\n          <Products\n            products={products}\n            addToCart={this.addToCart}\n          />\n\n          <div className=\"app__cart-block cart-block\">\n            <button\n              type=\"button\"\n              onClick={this.getCartVisible}\n              className=\"cart-block__button\"\n            />\n\n            {(this.state.cartVisible)\n              ? (<Cart cartItems={cartItems} clearCart={this.clearCart} />)\n              : <></>}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}